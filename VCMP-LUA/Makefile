# GNU Make project makefile autogenerated by Premake

ifndef config
  config=release32
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),release32)
  RESCOMP = windres
  TARGETDIR = ../bin/Release32-windows-x86/LuaPlugin
  TARGET = $(TARGETDIR)/LuaPlugin_x86.dll
  OBJDIR = ../bin/interm/Release32-windows-x86/LuaPlugin
  DEFINES += -D_x32 -DLIBASYNC_STATIC -DWIN32
  INCLUDES += -I. -Iinclude -IvcmpWrap -Ivendor -Ivendor/Lua -Ivendor/sol -Ivendor/spdlog/include -Ivendor/asyncplusplus/include -Imodules/sqlite3/sqliteCpp/include -Imodules/requests/cpr/include -Imodules/mariadb/include -Imodules/mariadb/include/mysql
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -fPIC -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Release32-windows-x86/spdlog/spdlog_x86.lib ../bin/Release32-windows-x86/Lua/Lua_x86.lib ../bin/Release32-windows-x86/asyncplusplus/asyncplusplus_x86.lib ../bin/Release32-windows-x86/module-crypto/module-crypto_x86.lib ../bin/Release32-windows-x86/module-sqliteCpp/module-sqliteCpp_x86.lib ../bin/Release32-windows-x86/module-cpr/module-cpr_x86.lib
  LDDEPS += ../bin/Release32-windows-x86/spdlog/spdlog_x86.lib ../bin/Release32-windows-x86/Lua/Lua_x86.lib ../bin/Release32-windows-x86/asyncplusplus/asyncplusplus_x86.lib ../bin/Release32-windows-x86/module-crypto/module-crypto_x86.lib ../bin/Release32-windows-x86/module-sqliteCpp/module-sqliteCpp_x86.lib ../bin/Release32-windows-x86/module-cpr/module-cpr_x86.lib
  ALL_LDFLAGS += $(LDFLAGS) -Lmodules/mariadb/lib -L/usr/lib32 -m32 -shared -Wl,--out-implib="../bin/Release32-windows-x86/LuaPlugin/LuaPlugin_x86.lib" -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ../bin/Release-windows-x86_64/LuaPlugin
  TARGET = $(TARGETDIR)/LuaPlugin_x64.dll
  OBJDIR = ../bin/interm/Release-windows-x86_64/LuaPlugin
  DEFINES += -DLIBASYNC_STATIC -DWIN32 -D_RELEASE
  INCLUDES += -I. -Iinclude -IvcmpWrap -Ivendor -Ivendor/Lua -Ivendor/sol -Ivendor/spdlog/include -Ivendor/asyncplusplus/include -Imodules/sqlite3/sqliteCpp/include -Imodules/requests/cpr/include -Imodules/mariadb/include -Imodules/mariadb/include/mysql
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Release-windows-x86_64/spdlog/spdlog_x64.lib ../bin/Release-windows-x86_64/Lua/Lua_x64.lib ../bin/Release-windows-x86_64/asyncplusplus/asyncplusplus_x64.lib ../bin/Release-windows-x86_64/module-crypto/module-crypto_x64.lib ../bin/Release-windows-x86_64/module-sqliteCpp/module-sqliteCpp_x64.lib ../bin/Release-windows-x86_64/module-cpr/module-cpr_x64.lib -lmysqlclient.lib
  LDDEPS += ../bin/Release-windows-x86_64/spdlog/spdlog_x64.lib ../bin/Release-windows-x86_64/Lua/Lua_x64.lib ../bin/Release-windows-x86_64/asyncplusplus/asyncplusplus_x64.lib ../bin/Release-windows-x86_64/module-crypto/module-crypto_x64.lib ../bin/Release-windows-x86_64/module-sqliteCpp/module-sqliteCpp_x64.lib ../bin/Release-windows-x86_64/module-cpr/module-cpr_x64.lib
  ALL_LDFLAGS += $(LDFLAGS) -Lmodules/mariadb/lib -L/usr/lib64 -m64 -shared -Wl,--out-implib="../bin/Release-windows-x86_64/LuaPlugin/LuaPlugin_x64.lib" -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Core.o \
	$(OBJDIR)/ConvertUTF.o \
	$(OBJDIR)/account.o \
	$(OBJDIR)/bind.o \
	$(OBJDIR)/concurrency.o \
	$(OBJDIR)/connection.o \
	$(OBJDIR)/date_time.o \
	$(OBJDIR)/exceptions.o \
	$(OBJDIR)/last_error.o \
	$(OBJDIR)/result_set.o \
	$(OBJDIR)/save_point.o \
	$(OBJDIR)/statement.o \
	$(OBJDIR)/time.o \
	$(OBJDIR)/time_span.o \
	$(OBJDIR)/transaction.o \
	$(OBJDIR)/worker.o \
	$(OBJDIR)/pch.o \
	$(OBJDIR)/Bind1.o \
	$(OBJDIR)/Checkpoint.o \
	$(OBJDIR)/Object.o \
	$(OBJDIR)/Pickup.o \
	$(OBJDIR)/Player.o \
	$(OBJDIR)/Server.o \
	$(OBJDIR)/Stream.o \
	$(OBJDIR)/Vehicle.o \
	$(OBJDIR)/EventManager.o \
	$(OBJDIR)/Remote.o \
	$(OBJDIR)/Hash.o \
	$(OBJDIR)/MySQL.o \
	$(OBJDIR)/MySQLAccount.o \
	$(OBJDIR)/MySQLConnection.o \
	$(OBJDIR)/SqLite.o \
	$(OBJDIR)/Thread.o \
	$(OBJDIR)/TimerManager.o \
	$(OBJDIR)/vcmpTimer.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking LuaPlugin
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning LuaPlugin
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/Core.o: Core.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ConvertUTF.o: include/ConvertUTF.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/account.o: modules/mariadb/src/account.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bind.o: modules/mariadb/src/bind.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/concurrency.o: modules/mariadb/src/concurrency.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/connection.o: modules/mariadb/src/connection.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/date_time.o: modules/mariadb/src/date_time.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/exceptions.o: modules/mariadb/src/exceptions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/last_error.o: modules/mariadb/src/last_error.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/result_set.o: modules/mariadb/src/result_set.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/save_point.o: modules/mariadb/src/save_point.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/statement.o: modules/mariadb/src/statement.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/time.o: modules/mariadb/src/time.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/time_span.o: modules/mariadb/src/time_span.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/transaction.o: modules/mariadb/src/transaction.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/worker.o: modules/mariadb/src/worker.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pch.o: pch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Bind1.o: vcmpWrap/Classes/Bind.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Checkpoint.o: vcmpWrap/Classes/Checkpoint.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Object.o: vcmpWrap/Classes/Object.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Pickup.o: vcmpWrap/Classes/Pickup.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Player.o: vcmpWrap/Classes/Player.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Server.o: vcmpWrap/Classes/Server.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Stream.o: vcmpWrap/Classes/Stream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Vehicle.o: vcmpWrap/Classes/Vehicle.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EventManager.o: vcmpWrap/EventManager/EventManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Remote.o: vcmpWrap/Modules/CPR/Remote.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Hash.o: vcmpWrap/Modules/Crypto/Hash.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MySQL.o: vcmpWrap/Modules/MariaDB/MySQL.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MySQLAccount.o: vcmpWrap/Modules/MariaDB/MySQLAccount.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MySQLConnection.o: vcmpWrap/Modules/MariaDB/MySQLConnection.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SqLite.o: vcmpWrap/Modules/SqLite3/SqLite.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Thread.o: vcmpWrap/Modules/Thread/Thread.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TimerManager.o: vcmpWrap/Timer/TimerManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vcmpTimer.o: vcmpWrap/Timer/vcmpTimer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif